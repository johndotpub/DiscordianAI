# Optimized CI workflow with parallel tox execution and caching
name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

permissions:
  contents: read

jobs:
  # Single optimized job using tox for everything
  test-and-lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/requirements.txt', '**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-${{ matrix.python-version }}-
    
    - name: Cache tox environments
      uses: actions/cache@v3
      with:
        path: .tox
        key: ${{ runner.os }}-tox-${{ matrix.python-version }}-${{ hashFiles('**/pyproject.toml', '**/tox.ini') }}
        restore-keys: |
          ${{ runner.os }}-tox-${{ matrix.python-version }}-
    
    - name: Install tox
      run: |
        python -m pip install --upgrade pip
        pip install tox
    
    - name: Run tox in parallel
      run: |
        # Run all environments in parallel for maximum performance
        tox --parallel auto -e py310,lint,test
        
    - name: Generate coverage XML
      run: |
        # Ensure coverage XML is generated for Codecov
        coverage xml -o coverage.xml
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: coverage.xml
        fail_ci_if_error: false
        verbose: true
